[{"/home/narek/quotes/src/index.js":"1","/home/narek/quotes/src/App.js":"2","/home/narek/quotes/src/pages/AllQuotes.js":"3","/home/narek/quotes/src/pages/QuotesDetail.js":"4","/home/narek/quotes/src/pages/NewQuotes.js":"5","/home/narek/quotes/src/components/comments/Comments.js":"6","/home/narek/quotes/src/components/comments/NewCommentForm.js":"7","/home/narek/quotes/src/components/layout/Layout.js":"8","/home/narek/quotes/src/components/layout/MainNavigation.js":"9","/home/narek/quotes/src/components/quotes/QuoteList.js":"10","/home/narek/quotes/src/components/quotes/QuoteItem.js":"11","/home/narek/quotes/src/components/quotes/QuoteForm.js":"12","/home/narek/quotes/src/components/UI/LoadingSpinner.js":"13","/home/narek/quotes/src/components/UI/Card.js":"14","/home/narek/quotes/src/components/quotes/HighlightedQuote.js":"15","/home/narek/quotes/src/components/NotFound/NotFound.jsx":"16","/home/narek/quotes/src/apiCall.js":"17","/home/narek/quotes/src/constants/index.js":"18","/home/narek/quotes/src/components/Input/Input.js":"19","/home/narek/quotes/src/components/quotes/NoQuotesFound.js":"20","/home/narek/quotes/src/store/index.js":"21","/home/narek/quotes/src/store/rootReducer.js":"22","/home/narek/quotes/src/store/rootSaga.js":"23","/home/narek/quotes/src/store/quote/slice.js":"24","/home/narek/quotes/src/store/quote/sagas.js":"25","/home/narek/quotes/src/store/quote/sagas-actions.js":"26","/home/narek/quotes/src/store/error/slice.js":"27"},{"size":373,"mtime":1640973722888,"results":"28","hashOfConfig":"29"},{"size":800,"mtime":1640439057751,"results":"30","hashOfConfig":"29"},{"size":973,"mtime":1640974554289,"results":"31","hashOfConfig":"29"},{"size":1337,"mtime":1640974570213,"results":"32","hashOfConfig":"29"},{"size":707,"mtime":1640974567741,"results":"33","hashOfConfig":"29"},{"size":647,"mtime":1616596573000,"results":"34","hashOfConfig":"29"},{"size":744,"mtime":1616596573000,"results":"35","hashOfConfig":"29"},{"size":377,"mtime":1639918772649,"results":"36","hashOfConfig":"29"},{"size":645,"mtime":1639920607143,"results":"37","hashOfConfig":"29"},{"size":2650,"mtime":1641651724253,"results":"38","hashOfConfig":"29"},{"size":613,"mtime":1640542126948,"results":"39","hashOfConfig":"29"},{"size":1653,"mtime":1640969591335,"results":"40","hashOfConfig":"29"},{"size":167,"mtime":1616596573000,"results":"41","hashOfConfig":"29"},{"size":156,"mtime":1616596573000,"results":"42","hashOfConfig":"29"},{"size":270,"mtime":1616596573000,"results":"43","hashOfConfig":"29"},{"size":190,"mtime":1640439036274,"results":"44","hashOfConfig":"29"},{"size":703,"mtime":1641657359085,"results":"45","hashOfConfig":"29"},{"size":75,"mtime":1640710059088,"results":"46","hashOfConfig":"29"},{"size":1858,"mtime":1641658969078,"results":"47","hashOfConfig":"29"},{"size":268,"mtime":1616596573000,"results":"48","hashOfConfig":"29"},{"size":529,"mtime":1643549295890,"results":"49","hashOfConfig":"29"},{"size":184,"mtime":1641660879436,"results":"50","hashOfConfig":"29"},{"size":167,"mtime":1641660992390,"results":"51","hashOfConfig":"29"},{"size":677,"mtime":1641657874715,"results":"52","hashOfConfig":"29"},{"size":768,"mtime":1641658203732,"results":"53","hashOfConfig":"29"},{"size":247,"mtime":1641661026243,"results":"54","hashOfConfig":"29"},{"size":0,"mtime":1641659195908,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1ro6j19",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/narek/quotes/src/index.js",[],["114","115"],"/home/narek/quotes/src/App.js",[],"/home/narek/quotes/src/pages/AllQuotes.js",["116"],"import React, { useEffect, useState } from 'react'\nimport apiCall from '../apiCall'\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\nimport QuoteList from '../components/quotes/QuoteList'\n\nconst AllQuotes = () => {\n    const [allQuotes, setAllQuotes] = useState([])\n\n    useEffect(() => {\n        const getQuotes = async () => {\n            try {\n                const { data: quotes } = await apiCall({ url: '/quotes.json' })\n                const quotes_arr = []\n                for (const item in quotes) {\n                    quotes_arr.push({ id: item, ...quotes[item] })\n                }\n                setAllQuotes(quotes_arr)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        getQuotes()\n    }, [])\n\n    // if (allQuotes.length < 1) {\n    //     return <NoQuotesFound />\n    // }\n\n    return (\n        <div>\n            <QuoteList quotes={allQuotes} />\n        </div>\n    )\n}\n\nexport default AllQuotes\n","/home/narek/quotes/src/pages/QuotesDetail.js",[],"/home/narek/quotes/src/pages/NewQuotes.js",[],"/home/narek/quotes/src/components/comments/Comments.js",[],"/home/narek/quotes/src/components/comments/NewCommentForm.js",[],"/home/narek/quotes/src/components/layout/Layout.js",[],"/home/narek/quotes/src/components/layout/MainNavigation.js",[],"/home/narek/quotes/src/components/quotes/QuoteList.js",["117"],"import { Fragment, useMemo, useEffect, useState } from 'react'\n\nimport QuoteItem from './QuoteItem'\nimport classes from './QuoteList.module.css'\n\n\nconst SORT_DIRECTION = [\n    { key: 'ASC', value: 'ASC' },\n    { key: 'DESC', value: 'DESC' },\n]\n\nconst SORT_FIELDS = [\n    { key: 'name', value: 'name' },\n    { key: 'author', value: 'author' },\n]\n\nconst QuoteList = ({ quotes }) => {\n\n    const sortQuotes = useMemo(() => (quotes, sortBy, direction) => {\n        return [...quotes].sort((quoteA, quoteB) => {\n            if (direction.toLowerCase() === 'asc') {\n                return quoteA[sortBy] > quoteB[sortBy] ? 1 : -1\n            } else {\n                return quoteA[sortBy] < quoteB[sortBy] ? 1 : -1\n            }\n        })\n    }, [])\n    const [sortDirection, setSortDirection] = useState(\n        SORT_DIRECTION[0].key || 'ASC'\n    )\n    const [sortKey, setSortKey] = useState(SORT_FIELDS[0].key)\n    const [updatedQuotes, setUpdatedQuotes] = useState([])\n\n    useEffect(() => {\n        setUpdatedQuotes(quotes)\n    }, [quotes])\n\n    useEffect(() => {\n        const sortedQuotes = sortQuotes(updatedQuotes, sortDirection, sortKey)\n        setUpdatedQuotes(sortedQuotes)\n    }, [sortKey, sortDirection])\n\n    const sortKeyHandler = (value) => {\n        setSortKey(value)\n    }\n\n    const sortDirectionHandler = (value) => {\n        setSortDirection(value)\n    }\n\n    return (\n        <Fragment>\n            <select\n                onChange={(e) => sortKeyHandler(e.target.value)}\n                className=\"btn--flat\"\n            >\n                {SORT_FIELDS.map((item) => {\n                    return (\n                        <option key={item.key} value={item.value}>\n                            {item.value}\n                        </option>\n                    )\n                })}\n            </select>\n            <select\n                onChange={(e) => sortDirectionHandler(e.target.value)}\n                className=\"btn--flat\"\n            >\n                {SORT_DIRECTION.map((item) => {\n                    return (\n                        <option key={item.key} value={item.value}>\n                            {item.value}\n                        </option>\n                    )\n                })}\n            </select>\n            <ul className={classes.list}>\n                {updatedQuotes.map((quote) => (\n                    <QuoteItem\n                        key={quote.id}\n                        id={quote.id}\n                        author={quote.author}\n                        text={quote.text}\n                    />\n                ))}\n            </ul>\n        </Fragment>\n    )\n}\n\nexport default QuoteList\n","/home/narek/quotes/src/components/quotes/QuoteItem.js",[],"/home/narek/quotes/src/components/quotes/QuoteForm.js",[],"/home/narek/quotes/src/components/UI/LoadingSpinner.js",[],"/home/narek/quotes/src/components/UI/Card.js",[],"/home/narek/quotes/src/components/quotes/HighlightedQuote.js",[],"/home/narek/quotes/src/components/NotFound/NotFound.jsx",[],"/home/narek/quotes/src/apiCall.js",[],"/home/narek/quotes/src/constants/index.js",[],"/home/narek/quotes/src/components/Input/Input.js",[],"/home/narek/quotes/src/components/quotes/NoQuotesFound.js",["118"],"import classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <a className='btn'>\n        Add a Quote\n      </a>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","/home/narek/quotes/src/store/index.js",[],"/home/narek/quotes/src/store/rootReducer.js",[],"/home/narek/quotes/src/store/rootSaga.js",[],"/home/narek/quotes/src/store/quote/slice.js",[],"/home/narek/quotes/src/store/quote/sagas.js",[],"/home/narek/quotes/src/store/quote/sagas-actions.js",[],"/home/narek/quotes/src/store/error/slice.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":41,"column":8,"nodeType":"129","endLine":41,"endColumn":32,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":7,"column":7,"nodeType":"133","endLine":7,"endColumn":26},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'NoQuotesFound' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sortQuotes' and 'updatedQuotes'. Either include them or remove the dependency array.","ArrayExpression",["136"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},"Update the dependencies array to be: [sortKey, sortDirection, sortQuotes, updatedQuotes]",{"range":"139","text":"140"},[1189,1213],"[sortKey, sortDirection, sortQuotes, updatedQuotes]"]